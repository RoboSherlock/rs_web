{
    "query": [

	{
	    "q":"",
	    "text":"<b>RoboSherlock interface</b>"
	},

	{
	    "q":"",
	    "text":"-----------------------"
	},
	{
	    "q":"annotators(A).",
	    "text":"Show RoboSherlock components."
	},
	{   "q":"assert_test_pipeline.",
        "text":"Assertions for testing."
	},
	{
	    "q":"annotator_requires_input_type(rs_components:'PrimitiveShapeAnnotator',I).",
	    "text":"Input types for PrimitiveShapeAnnotator."
	},
	{
	    "q":"annotator_outputs(rs_components:'PrimitiveShapeAnnotator',I).",
	    "text":"Output types for PrimitiveShapeAnnotator."
	},
	{
	    "q":"owl_individual_of(I, rs_components:'RoboSherlockComponent').",
	    "text":"What are the active components?"
	},
	{
        "q":"owl_individual_of(I, rs_components:'PrimitiveShapeAnnotator'),annotator_outputs(rs_components:'PrimitiveShapeAnnotator',T),compute_annotator_output_type_domain(I, T, D).",
        "text":"What are the output domain constraints of PrimitiveShapAnnotator?"
	},
	{
        "text":"Retact all assertions",
        "q":"retract_all_annotators."
	},
	{
	    "q":"",
	    "text":""
	},
    {
	    "q":"",
	    "text":"<b>Detection queries</b>"
	},
	{
            "q":"owl_parse('package://iai_semantic_maps/owl/kitchen.owl'),owl_individual_of(A, knowrob:'SemanticEnvironmentMap'),show(A),marker_publish.",
            "text":"<i>View semantic map</i>"
        },
        {
	    "q":"",
	    "text":"-------------"
	},
        {
            "q":"detect([an, object,[class, ''],[timestamp, '1522249987296654516']]).",
            "text":"Detect all objects."
        },
        {
            "q":"detect([an, object,[class, 'BluePlasticSpoon'],[timestamp, '1522249987296654516']]).",
            "text":"Detect a specific breakfast cereal."
        },
        {
            "q":"detect([an, object,[type,'FoodOrDrink'],[timestamp, '1522249987296654516']]).",
            "text":"Detect a food or a drink"
        },
        {
            "q":"detect([an, object,[type,'FoodOrDrink'],[hasIngredient,'Honey'], [timestamp, '1522249987296654516']]).",
            "text":"Detect a food or a drink that contains honey."
        },
        {
            "q":"detect([an, object,[type,'Container']]).",
            "text":"Detect a container"
        },
        {
            "q":"detect([an, object,[type,'Container'],[canHoldAmount,'1.0']]).",
            "text":"Detect a container that can hold one liter of stuff"
        },
        {
            "q":"detect([an, object,[type, 'Handle'], [timestamp,'1522249987296654516']]).",
            "text":"Detect a drawer handle."
        }
    ]
}

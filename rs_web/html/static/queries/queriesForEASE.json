{
    "query": [

	{
	    "q":"",
	    "text":"<b>RoboSherlock interface</b>"
	},

	{
	    "q":"",
	    "text":"-----------------------"
	},
	{
	    "q":"annotators(A).",
	    "text":"Show RoboSherlock components."
	},
	{
	    "q":"annotator_requires_input_type(rs_components:'PrimitiveShapeAnnotator',I).",
	    "text":"Input types for PrimitiveShapeAnnotator."
	},
	{
	    "q":"owl_individual_of(I, rs_components:'RoboSherlockComponent').",
	    "text":"What are the active components?"
	},
	{
	  "q":"build_pipeline_from_predicates_no_constraints([shape, color],P).",
	  "text":"Plan a general pipeline for detecting shape and color."
	},
	{
	  "q":"pipeline_from_predicates_with_domain_constraint([shape, color],P).",
	  "text":"Plan a pipeline for detecting shape and color."
	},
	{
	    "q":"run_annotator(rs_components:'PrimitiveShapeAnnotator').",
	    "text":"Run PrimitiveShapeAnnotator"
	},
	{
	    "q":"",
	    "text":""
	},
{
	    "q":"",
	    "text":"<b>Detection queries</b>"
	},
	{
            "q":"owl_parse('package://iai_semantic_maps/owl/kitchen.owl'),owl_individual_of(A, knowrob:'SemanticEnvironmentMap'),show(A),marker_publish.",
            "text":"<i>View semantic map</i>"
        },
{
	    "q":"",
	    "text":"-------------"
	},
        {
            "q":"detect([an, object,[shape, round]]).",
            "text":"Detect objects tha have are round."
        },
        {
            "q":"detect([an, object,[color, blue]]).",
            "text":"Detect objects that are yellow"
        },
        {
            "q":"detect([an, object,[type,'Spoon']]).",
            "text":"Detect spoon."
        }
    ]
}
